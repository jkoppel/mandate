digraph {
    0 [label="<(NilStmt(); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | []>"
      ,shape=box];
    1 [label="<(While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt())))); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    2 [label="<(ConsStmt(While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt())))), NilStmt()); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    3 [label="<(If(*v, ConsStmt(Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))), While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))), NilStmt()); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    4 [label="<(NilStmt(); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    5 [label="<(NilStmt(); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    6 [label="<(Assign(Var(Name(\"x\")), *v); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    7 [label="<(ExpStmt(*v); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt())); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    8 [label="<(Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    9 [label="<(NilStmt(); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
      ,shape=box];
    10 [label="<(Assign(FieldAccess(ReferenceVal(HeapAddr(0)), Name(\"x\")), *v); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
       ,shape=box];
    11 [label="<(ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
       ,shape=box];
    12 [label="<(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt())); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
       ,shape=box];
    13 [label="<(NilStmt(); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt())); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
       ,shape=box];
    14 [label="<(ConsStmt(Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))), While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
       ,shape=box];
    15 [label="<(NilStmt(); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
       ,shape=box];
    16 [label="<(NilStmt(); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | [\\(-1; (-2,-3)) -> (ConsStmt(-1, While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt()))))); (-2,-3))].[\\(-1; (-2,-3)) -> (ConsStmt(-1, NilStmt()); (-2,-3))].[\\(-1; (-2,-3)) -> (Block(-1); (-2,-3))].[]>"
       ,shape=box];
    17 [label="<(Block(ConsStmt(While(*v, Block(ConsStmt(ExpStmt(*v), ConsStmt(Assign(Var(Name(\"x\")), *v), NilStmt())))), NilStmt())); (ConsFrame(HeapAddr(0), NilFrame()),HeapAddr(1): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(Print(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)), HeapAddr(0): *v, HeapAddr(2): Closure(NilName(), Block(ConsStmt(Return(Builtin(Read(), *v)), NilStmt())), HeapAddr(-1)), HeapAddr(3): Closure(ConsName(Name(\"x\"), NilName()), Block(ConsStmt(Return(Builtin(IntCast(), Var(Name(\"x\")))), NilStmt())), HeapAddr(-1)))) | []>"
       ,shape=box];
    1 -> 3 [label="",shape=box];
    2 -> 1 [label="",shape=box];
    3 -> 14 [label="",shape=box];
    3 -> 15 [label="",shape=box];
    4 -> 0 [label="",shape=box];
    5 -> 16 [label="",shape=box];
    6 -> 10 [label="",shape=box];
    7 -> 13 [label="",shape=box];
    8 -> 12 [label="",shape=box];
    9 -> 5 [label="",shape=box];
    10 -> 9 [label="",shape=box];
    11 -> 6 [label="",shape=box];
    12 -> 7 [label="",shape=box];
    13 -> 11 [label="",shape=box];
    14 -> 8 [label="",shape=box];
    15 -> 4 [label="",shape=box];
    16 -> 1 [label="",shape=box];
    17 -> 2 [label="",shape=box];
}
